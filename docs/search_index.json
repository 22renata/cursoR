[
["index.html", "Curso de R para meteorología IAG/USP Capitulo 1 Pre-requisitos do sistema 1.1 Pacotes usados neste curso 1.2 Colaborar 1.3 Aportar com dados", " Curso de R para meteorología IAG/USP Sergio Ibarra-Espinosa e possivelmente outros (u r invited to collaborate) 2018-04-29 Capitulo 1 Pre-requisitos do sistema Em Windows, install alem do R, Rtools https://cran.r-project.org/bin/windows/Rtools/ Em MAC instale netcdf e: brew unlink gdal brew tap osgeo/osgeo4mac &amp;&amp; brew tap --repair brew install proj brew install geos brew install udunits brew install gdal2 --with-armadillo --with-complete --with-libkml --with-unsupported brew link --force gdal2 Em Ubuntu: - sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable --yes - sudo apt-get --yes --force-yes update -qq # install tmap dependencies - sudo apt-get install --yes libprotobuf-dev protobuf-compiler libv8-3.14-dev # install tmap dependencies; for 16.04 libjq-dev this ppa is needed: - sudo add-apt-repository -y ppa:opencpu/jq - sudo apt-get --yes --force-yes update -qq - sudo apt-get install libjq-dev # units/udunits2 dependency: - sudo apt-get install --yes libudunits2-dev # sf dependencies: - sudo apt-get install --yes libproj-dev libgeos-dev libgdal-dev libnetcdf-dev netcdf-bin gdal-bin 1.1 Pacotes usados neste curso Para fazer ete curso instale os seguentes pacotes como se indica: install.packages(&quot;devtools&quot;) devtools::install_github(&quot;tidyverse/tidyverse&quot;) devtools::install_github(&quot;r-spatial/sf&quot;) devtools::install_github(&quot;r-spatial/mapview&quot;) devtools::install_github(&quot;r-spatial/stars&quot;) install.packages(c(&quot;raster&quot;, &quot;sp&quot;, &quot;rgdal&quot;, &quot;maptools&quot;, &quot;ncdf4&quot;)) install.packages(&quot;cptcity&quot;) devtools é um pacote para instalar pacotes de diferentes repositorios tidyverse é universo de pacotes do Hadley Wickham. A instalação tem que ser usando devtools pois precisamos plotar os objetos espacias sf usando geom_sf. sf e mapview, stars, raster, sp, rgdal e maptools são para a parte espacial. Lembrar que os objetos em meteorologias são espacio-temporais. ncdf4 é um pacote para manipular arquivos NetCDF. cptcity é um pacote que tem 7140 paletas de cores do arquivo web cpt-city (http://soliton.vm.bytemark.co.uk/pub/cpt-city/index.html). 1.2 Colaborar A forma preferida de colaboração é com pull-requests em https://github.com/ibarraespinosa/cursoR/pull/new/master. Lembre de aplicar a Guia de Estilo de R de Google (https://google.github.io/styleguide/Rguide.xml) ou com o formato de formatR https://yihui.name/formatr/. Em poucas palabras, lembre que seu codigo vai ser lido por seres humanos. Se quiser tem aceso no repoitorio deste curso, me contacte. Tem um botton para editar qualquer pagina. 1.3 Aportar com dados Se voce tem dados para fazer este curso mais legal, por favor, edite este aquivo e com pull request, eu vou fazer um merge para poder. NCEP: ftp://nomads.ncdc.noaa.gov/GFS/analysis_only/ "],
["intro.html", "Capitulo 2 Intro", " Capitulo 2 Intro Este curso é para pos, então vamos ver conteúdo rapidamente e se não da tempo, este curso esta online no sitio https://github.com/atmoschem/cursorIAG. Eu tento usar BASE sempre que posso, e se não da ai vou para outros paradigmas. Outros pacotes de BASE: utils, stats, datasets, graphics, grDevices, grid, methods, tools, parallel, compiler, splines, tcltk , stats4. Veja outros pacotes. Este curso esta baseado no livro R Programming for Data Science. Vamos usar Rstudio Dica: Se não sabe como usar uma função, escreva: ?função. As funções tem argumentos, use TAB para ver eles numa função. Vamos lá! "],
["r.html", "Capitulo 3 R! 3.1 Objetos de R 3.2 Classe 3.3 Vetores 3.4 Convertir objetos com as 3.5 Matrices e a função matrix 3.6 Array 3.7 list 3.8 Tempo e Data 3.9 Fatores 3.10 data.frames", " Capitulo 3 R! Quase em qualquer sistema operacional mas eu vou focar em Linux. Muita documentação: Intro. I/O. Quer fazer um pacote? Veja, aqui e aqui. Stackoverflow provides a great source of resources. 3.1 Objetos de R Character a numeric 1 integer 1 complex 0+1i logical TRUE 3.2 Classe class função permite ver a classe dos objetos 3.3 Vetores c(“A”, “C”, “D”) 1:5 = c(1, 2, 3, 4, 5) c(TRUE, FALSE) c(1i, -1i) c(1, “C”, “D”) qual é a classe??? c(1, NA, “D”) qual é a classe??? c(1, NA, NaN) qual é a classe??? 3.4 Convertir objetos com as as.numeric(c(1, &quot;C&quot;, &quot;D&quot;)) ## Warning: NAs introduzidos por coerção ## [1] 1 NA NA 3.5 Matrices e a função matrix [linhas, colunas] permitidos elementos da mesma clase! vamos ver os argumentos da função matrix args(matrix) ## function (data = NA, nrow = 1, ncol = 1, byrow = FALSE, dimnames = NULL) ## NULL usando TAB (m &lt;- matrix(data = 0, nrow = 4, ncol = 4)) ## [,1] [,2] [,3] [,4] ## [1,] 0 0 0 0 ## [2,] 0 0 0 0 ## [3,] 0 0 0 0 ## [4,] 0 0 0 0 (m1 &lt;- matrix(data = 1:(4*4), nrow = 4, ncol = 4)) ## [,1] [,2] [,3] [,4] ## [1,] 1 5 9 13 ## [2,] 2 6 10 14 ## [3,] 3 7 11 15 ## [4,] 4 8 12 16 dim(m1) ## [1] 4 4 (m2 &lt;- matrix(data = 1:(4*4), nrow = 4, ncol = 4, byrow = TRUE)) ## [,1] [,2] [,3] [,4] ## [1,] 1 2 3 4 ## [2,] 5 6 7 8 ## [3,] 9 10 11 12 ## [4,] 13 14 15 16 3.6 Array É como uma matriz de matrizes de matrizes de matrizes…… and so on. args(array) ## function (data = NA, dim = length(data), dimnames = NULL) ## NULL lembre usar TAB (a &lt;- array(data = 0, dim = c(1,1))) ## [,1] ## [1,] 0 class(a) ## [1] &quot;matrix&quot; (a &lt;- array(data = 0, dim = c(1,1,1))) ## , , 1 ## ## [,1] ## [1,] 0 class(a) ## [1] &quot;array&quot; (a &lt;- array(data = 0, dim = c(2,2,2))) ## , , 1 ## ## [,1] [,2] ## [1,] 0 0 ## [2,] 0 0 ## ## , , 2 ## ## [,1] [,2] ## [1,] 0 0 ## [2,] 0 0 (a &lt;- array(data = 0, dim = c(2,4,4))) ## , , 1 ## ## [,1] [,2] [,3] [,4] ## [1,] 0 0 0 0 ## [2,] 0 0 0 0 ## ## , , 2 ## ## [,1] [,2] [,3] [,4] ## [1,] 0 0 0 0 ## [2,] 0 0 0 0 ## ## , , 3 ## ## [,1] [,2] [,3] [,4] ## [1,] 0 0 0 0 ## [2,] 0 0 0 0 ## ## , , 4 ## ## [,1] [,2] [,3] [,4] ## [1,] 0 0 0 0 ## [2,] 0 0 0 0 dim(a) ## [1] 2 4 4 (a &lt;- array(data = 0, dim = c(2, 2,2,2))) 3.7 list As listas são como sacolas, e dentro delas, tu pode colocar mais sacolas… então, tu pode ter sacolas, dentro de sacolas, dentro de sacolas… ou list(list(list(list(1)))) ## [[1]] ## [[1]][[1]] ## [[1]][[1]][[1]] ## [[1]][[1]][[1]][[1]] ## [1] 1 a diferença das matrices, tu pode colocar cualquer coisa nas listas, por exemplo: funções, characters, etc. (x &lt;- list(1, &quot;a&quot;, TRUE, 1 + 4i)) ## [[1]] ## [1] 1 ## ## [[2]] ## [1] &quot;a&quot; ## ## [[3]] ## [1] TRUE ## ## [[4]] ## [1] 1+4i 3.8 Tempo e Data R tem classes de tempo e data: (a &lt;- ISOdate(year = 2018, month = 4, day = 5)) ## [1] &quot;2018-04-05 12:00:00 GMT&quot; class(a) ## [1] &quot;POSIXct&quot; &quot;POSIXt&quot; (b &lt;- ISOdate(year = 2018, month = 4, day = 5, tz = &quot;Americas/Sao_Paulo&quot;)) ## [1] &quot;2018-04-05 12:00:00 Americas&quot; tempo (d &lt;- ISOdatetime(year = 2018, month = 4, day = 5, hour = 0, min = 0, sec = 0, tz = &quot;Americas/Sao_Paulo&quot;)) ## [1] &quot;2018-04-05 Americas&quot; O pacote nanotime permite trabalhar com nano segundos. Da pra fazer secuencias: hoje &lt;- Sys.time() (a &lt;- seq.POSIXt(from = hoje, by = 3600, length.out = 24)) ## [1] &quot;2018-04-29 13:06:04 -03&quot; &quot;2018-04-29 14:06:04 -03&quot; ## [3] &quot;2018-04-29 15:06:04 -03&quot; &quot;2018-04-29 16:06:04 -03&quot; ## [5] &quot;2018-04-29 17:06:04 -03&quot; &quot;2018-04-29 18:06:04 -03&quot; ## [7] &quot;2018-04-29 19:06:04 -03&quot; &quot;2018-04-29 20:06:04 -03&quot; ## [9] &quot;2018-04-29 21:06:04 -03&quot; &quot;2018-04-29 22:06:04 -03&quot; ## [11] &quot;2018-04-29 23:06:04 -03&quot; &quot;2018-04-30 00:06:04 -03&quot; ## [13] &quot;2018-04-30 01:06:04 -03&quot; &quot;2018-04-30 02:06:04 -03&quot; ## [15] &quot;2018-04-30 03:06:04 -03&quot; &quot;2018-04-30 04:06:04 -03&quot; ## [17] &quot;2018-04-30 05:06:04 -03&quot; &quot;2018-04-30 06:06:04 -03&quot; ## [19] &quot;2018-04-30 07:06:04 -03&quot; &quot;2018-04-30 08:06:04 -03&quot; ## [21] &quot;2018-04-30 09:06:04 -03&quot; &quot;2018-04-30 10:06:04 -03&quot; ## [23] &quot;2018-04-30 11:06:04 -03&quot; &quot;2018-04-30 12:06:04 -03&quot; funções bacana: weekdays, month, julian weekdays(a) ## [1] &quot;domingo&quot; &quot;domingo&quot; &quot;domingo&quot; &quot;domingo&quot; &quot;domingo&quot; &quot;domingo&quot; &quot;domingo&quot; ## [8] &quot;domingo&quot; &quot;domingo&quot; &quot;domingo&quot; &quot;domingo&quot; &quot;segunda&quot; &quot;segunda&quot; &quot;segunda&quot; ## [15] &quot;segunda&quot; &quot;segunda&quot; &quot;segunda&quot; &quot;segunda&quot; &quot;segunda&quot; &quot;segunda&quot; &quot;segunda&quot; ## [22] &quot;segunda&quot; &quot;segunda&quot; &quot;segunda&quot; months(a) ## [1] &quot;abril&quot; &quot;abril&quot; &quot;abril&quot; &quot;abril&quot; &quot;abril&quot; &quot;abril&quot; &quot;abril&quot; &quot;abril&quot; ## [9] &quot;abril&quot; &quot;abril&quot; &quot;abril&quot; &quot;abril&quot; &quot;abril&quot; &quot;abril&quot; &quot;abril&quot; &quot;abril&quot; ## [17] &quot;abril&quot; &quot;abril&quot; &quot;abril&quot; &quot;abril&quot; &quot;abril&quot; &quot;abril&quot; &quot;abril&quot; &quot;abril&quot; julian(a) #olha ?julian... dias desde origin ## Time differences in days ## [1] 17650.67 17650.71 17650.75 17650.80 17650.84 17650.88 17650.92 ## [8] 17650.96 17651.00 17651.05 17651.09 17651.13 17651.17 17651.21 ## [15] 17651.25 17651.30 17651.34 17651.38 17651.42 17651.46 17651.50 ## [22] 17651.55 17651.59 17651.63 ## attr(,&quot;origin&quot;) ## [1] &quot;1970-01-01 GMT&quot; olha https://en.wikipedia.org/wiki/Julian_day: 3.9 Fatores Os factors podem ser um pouco infernais. Olha R INFERNO Usados para representar categorias, ejemplo clasico para nos, dias da semana. a &lt;- seq.POSIXt(from = hoje, by = 3600, length.out = 24*7) aa &lt;- weekdays(a) class(aa) ## [1] &quot;character&quot; factor(aa) ## [1] domingo domingo domingo domingo domingo domingo domingo domingo ## [9] domingo domingo domingo segunda segunda segunda segunda segunda ## [17] segunda segunda segunda segunda segunda segunda segunda segunda ## [25] segunda segunda segunda segunda segunda segunda segunda segunda ## [33] segunda segunda segunda terça terça terça terça terça ## [41] terça terça terça terça terça terça terça terça ## [49] terça terça terça terça terça terça terça terça ## [57] terça terça terça quarta quarta quarta quarta quarta ## [65] quarta quarta quarta quarta quarta quarta quarta quarta ## [73] quarta quarta quarta quarta quarta quarta quarta quarta ## [81] quarta quarta quarta quinta quinta quinta quinta quinta ## [89] quinta quinta quinta quinta quinta quinta quinta quinta ## [97] quinta quinta quinta quinta quinta quinta quinta quinta ## [105] quinta quinta quinta sexta sexta sexta sexta sexta ## [113] sexta sexta sexta sexta sexta sexta sexta sexta ## [121] sexta sexta sexta sexta sexta sexta sexta sexta ## [129] sexta sexta sexta sábado sábado sábado sábado sábado ## [137] sábado sábado sábado sábado sábado sábado sábado sábado ## [145] sábado sábado sábado sábado sábado sábado sábado sábado ## [153] sábado sábado sábado domingo domingo domingo domingo domingo ## [161] domingo domingo domingo domingo domingo domingo domingo domingo ## Levels: domingo quarta quinta sábado segunda sexta terça olha os Levels Então: ab &lt;- factor(x = aa, levels = c(&quot;Monday&quot;, &quot;Tuesday&quot;, &quot;Wednesday&quot;, &quot;Thursday&quot;, &quot;Friday&quot;, &quot;Saturday&quot;, &quot;Sunday&quot;)) levels(ab) ## [1] &quot;Monday&quot; &quot;Tuesday&quot; &quot;Wednesday&quot; &quot;Thursday&quot; &quot;Friday&quot; &quot;Saturday&quot; ## [7] &quot;Sunday&quot; 3.10 data.frames lembre ?data.frame São como planilha EXCEL…. mais o menos É uma classe bem especial, tem elementos de matriz mas o modo é lista (df &lt;- data.frame(a = 1:3)) ## a ## 1 1 ## 2 2 ## 3 3 names(df) ## [1] &quot;a&quot; class(df) ## [1] &quot;data.frame&quot; mode(df) ## [1] &quot;list&quot; Então nrow(df) ## [1] 3 ncol(df) ## [1] 1 dim(df) ## [1] 3 1 "],
["importando-e-exportando-dados-em-r.html", "Capitulo 4 Importando e exportando dados em R", " Capitulo 4 Importando e exportando dados em R We describe our methods in this chapter. "],
["applications.html", "Capitulo 5 Applications 5.1 Example one 5.2 Example two", " Capitulo 5 Applications Some significant applications are demonstrated in this chapter. 5.1 Example one 5.2 Example two "],
["final-words.html", "Capitulo 6 Final Words", " Capitulo 6 Final Words We have finished a nice book. "],
["references.html", "References", " References "]
]
